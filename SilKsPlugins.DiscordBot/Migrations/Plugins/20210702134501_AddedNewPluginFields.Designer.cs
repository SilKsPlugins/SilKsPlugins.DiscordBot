// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SilKsPlugins.DiscordBot.Databases.Plugins;

namespace SilKsPlugins.DiscordBot.Migrations.Plugins
{
    [DbContext(typeof(PluginsDbContext))]
    [Migration("20210702134501_AddedNewPluginFields")]
    partial class AddedNewPluginFields
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("SilKsPlugins.DiscordBot.Databases.Plugins.Models.CategoryInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<ulong?>("ChannelCategoryId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("SilKsPlugins.DiscordBot.Databases.Plugins.Models.PluginInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Author")
                        .HasColumnType("longtext");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<ulong?>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset?>("CreationTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("IconUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("Platforms")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Url")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Plugins");
                });

            modelBuilder.Entity("SilKsPlugins.DiscordBot.Databases.Plugins.Models.PluginInfo", b =>
                {
                    b.HasOne("SilKsPlugins.DiscordBot.Databases.Plugins.Models.CategoryInfo", "Category")
                        .WithMany("Plugins")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SilKsPlugins.DiscordBot.Databases.Plugins.Models.CategoryInfo", b =>
                {
                    b.Navigation("Plugins");
                });
#pragma warning restore 612, 618
        }
    }
}
